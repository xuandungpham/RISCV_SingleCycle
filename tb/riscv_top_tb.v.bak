`timescale 1ns/1ps

module riscv_top_tb;
    reg clk;
    reg reset;
    wire [31:0] result;
    wire [31:0] x10_out;  // Đọc giá trị x10_out từ DUT
    
    // Instantiate the RISC-V processor
    riscv_top dut (
        .clk(clk),
        .reset(reset),
        .result(result),
        .x10_out(x10_out)  // Kết nối x10_out
    );
    
    // Clock generation
    initial begin
        clk = 0;
        forever #5 clk = ~clk; // 100 MHz clock (10ns period)
    end
    
    // Test sequence
    initial begin
        $display("Starting simulation...");

        // Initial reset and clock
        reset = 1;  // Khởi tạo reset
        #50;         // Giữ reset trong 50ns
        reset = 0;   // Hủy bỏ reset sau 50ns

        // Run simulation for more time to observe behavior
        #200;

        // Debugging outputs
        $display("Time: %0t, Reset: %b, Result: %d", $time, reset, result);
        
        // Incluir a impressão de x10_out
        $display("x10_out: %d", x10_out);
        
        // Monitor the instruction memory and ALU control outputs
        $display("Instruction: %h, ALU control: %h", dut.instr_mem.memory[0], dut.alu_control.alu_control_out);
        
        // Debugging the ALU inputs
        $display("ALU Control: %b", dut.alu_control.alu_control_out);
        $display("Input A: %d, Input B: %d", dut.alu.A, dut.alu.B);
        
        // Print final result
        $display("Final result: %d", result);
        
        // End simulation
        $finish;
    end

    // Monitor changes: tự động theo dõi sự thay đổi của các tín hiệu
    initial begin
        $monitor("Time = %0t, Reset = %b, Result = %d, x10_out = %d", $time, reset, result, x10_out);
    end
endmodule
